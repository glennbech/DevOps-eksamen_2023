name: Build and Publish to ECR

on:
  workflow_dispatch:
#  push:
#    branches:
#      - main
#      - '*'

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Build container image
      run: docker build -t user-ppe:${{ github.sha }} -f Dockerfile .

    - name: Login to Amazon ECR
      if: github.ref == 'refs/heads/main'
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Push to Amazon ECR
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag user-ppe:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:user-ppe:${{ github.sha }}
        docker tag user-ppe:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:user-ppe:${{ github.sha }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      env:
        ECR_REGISTRY: 244530008913.dkr.ecr.eu-west-1.amazonaws.com
        ECR_REPOSITORY: adma007-private
        
  deploy-with-terraform:
    needs: build-and-push-docker
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      IMAGE: 244530008913.dkr.ecr.eu-west-1.amazonaws.com/adma007-private:user-ppe:${{ github.sha }}
      SERVICE_NAME: kandidat2017
    steps:
    - uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init
      working-directory: ./infra

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./infra

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./infra
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        TF_VAR_image: ${{ env.IMAGE }}
        TF_VAR_service_name: ${{ env.SERVICE_NAME }}